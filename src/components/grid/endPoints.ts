import {baseApi} from "@/store/baseApi";

// Define endpoints for the employees API using the baseApi instance
export const employeesEndPoints = baseApi.injectEndpoints({
	endpoints: (builder) => ({
		// Define an endpoint to get all employees
		getAllEmployees: builder.query({
			query({}) {
				return ({
					url: `/employee/`,
					method: 'GET',
					headers: {},
				})
			},
			// Tag this query for cache invalidation
			providesTags: ['employees']
		}),
		// Define an endpoint to add a new employee
		addEmployee: builder.mutation({
			query({...body}) {
				return ({
					url: `/employee/`,
					method: 'POST',
					data: body,
					headers: {},
				})
			},
			// Invalidate the employees tag to refresh the cache
			invalidatesTags:['employees']
		}),
		// Define an endpoint to remove an employee
		removeEmployee: builder.mutation({
			query({id}) {
				return ({
					url: `/employee/${id}`,
					method: 'DELETE',
					headers: {},
				})
			},
			// Invalidate the employees tag to refresh the cache
			invalidatesTags:['employees']
		}),
		// Define an endpoint to update an employee
		updateEmployee:builder.mutation({
			query({...body}) {
				return ({
					url: `/employee/${body.id}`,
					method: 'PUT',
					data: body,
					headers: {},
				})
			},
			// Invalidate the employees tag to refresh the cache
			invalidatesTags:['employees']
		}),
	}),
})

// Export hooks generated by the endpoints for use in components
export const {
	useGetAllEmployeesQuery,
	useAddEmployeeMutation,
	useRemoveEmployeeMutation,
	useUpdateEmployeeMutation,
} = employeesEndPoints